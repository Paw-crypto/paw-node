name: Live
on:
  workflow_dispatch:
    inputs:
      repo:
        description: "repo"
        default: "paw-digital/paw-node"
        required: true
      ref:
        description: "tag to build"
        default: "master"
        required: true
env:
  artifact: 1

jobs:
#  osx_job:
#    runs-on: macOS-10.15
#    timeout-minutes: 90
#    env:
#      BOOST_ROOT: /tmp/boost
#    steps:
#      - name: tag
#        run: |
#          echo "TAG=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
#      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
#        with:
#          submodules: "recursive"
#          ref: ${{ github.event.inputs.ref }}
#          repository: ${{ github.event.inputs.repo }}
#      - name: Fetch Deps
#        run: ci/actions/osx/install_deps.sh
#      - name: Build Artifact
#        run: TRAVIS_TAG=${TAG} ci/build-deploy.sh "/tmp/qt/lib/cmake/Qt5";
#      - name: Upload artifact
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: osx_${{ github.event.inputs.ref }}.tar
#          path: .

  linux_job:
    runs-on: ubuntu-20.04
    timeout-minutes: 90
    steps:
      - name: tag
        run: |
          echo "TAG=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          submodules: "recursive"
          ref: ${{ github.event.inputs.ref }}
          repository: ${{ github.event.inputs.repo }}
      - name: Fetch Deps
        env:
          COMPILER: gcc
        run: ci/actions/linux/install_deps.sh
      - name: Build Artifact
        run: docker run -v ${GITHUB_WORKSPACE}:/workspace nanocurrency/nano-env:gcc /bin/bash -c "cd /workspace && TRAVIS_TAG=${TAG} ci/build-deploy.sh /usr/lib/x86_64-linux-gnu/cmake/Qt5"
      - name: ls
        run: |
          ls ${{github.workspace}}/build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux_${{ github.event.inputs.ref }}.tar.bz2
          path: ${{github.workspace}}/build/paw-node-*-Linux.tar.bz2
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: linux_${{ github.event.inputs.ref }}.deb
#          path: ${{github.workspace}}/build/paw-node-*-Linux.deb
      - name: on error
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: |
            ${{github.workspace}}\build\CMakeFiles\CMakeError.log
            ${{github.workspace}}\build\CMakeFiles\CMakeOutput.log

#  linux_docker_job:
#    runs-on: ubuntu-20.04
#    timeout-minutes: 90
#    steps:
#      - name: tag
#        run: |
#          echo "TAG=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
#      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
#        with:
#          submodules: "recursive"
#          ref: ${{ github.event.inputs.ref }}
#          repository: ${{ github.event.inputs.repo }}
#      - name: Fetch Deps
#        env:
#          COMPILER: gcc
#        run: ci/actions/linux/install_deps.sh
#      - name: Build Docker (nanocurrency/nano)
#        run: TRAVIS_TAG=${TAG} ci/actions/linux/docker-build.sh
#      - name: Deploy Docker Hub (nanocurrency/nano)
#        if: ${{ github.repository == 'nanocurrency/nano-node' }}
#        run: TRAVIS_TAG=${TAG} ci/actions/linux/docker-deploy.sh
#        env:
#          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#      - name: Login to ghcr.io
#        uses: docker/login-action@adb73476b6e06caddec5db0bc1deacbec8cdd947
#        with:
#          registry: ghcr.io
#          username: ${{ github.repository_owner }}
#          password: ${{ secrets.GHCR_PAT }}
#      - name: Deploy Docker (ghcr.io)
#        run: ci/actions/linux/ghcr_push.sh

  windows_job:
    runs-on: windows-latest
    timeout-minutes: 90
    steps:
      - name: tag
        run: |
          Write-Output "TAG=${{ github.event.inputs.ref }}" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f
        with:
          submodules: "recursive"
          ref: ${{ github.event.inputs.ref }}
          repository: ${{ github.event.inputs.repo }}
      - name: Fetch Deps
        run: ci/actions/windows/install_deps.ps1
      - name: Build Artifact
        run: ci/actions/windows/build.ps1
        env:
          CSC_LINK: ${{ secrets.CSC_LINK }}
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
      - name: dir
        run: |
          dir ${{github.workspace}}\build
#      - name: Upload artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: windows_${{ github.event.inputs.ref }}.exe
#          path: ${{github.workspace}}\build\paw-node-*-win64.exe
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: windows_${{ github.event.inputs.ref }}.zip
          path: ${{github.workspace}}\build\nano-node-*-win64.zip
      - name: on error
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: logs
          path: |
            ${{github.workspace}}\build\CMakeFiles\CMakeError.log
            ${{github.workspace}}\build\CMakeFiles\CMakeOutput.log
